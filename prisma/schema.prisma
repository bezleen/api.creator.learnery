datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  createdDate  DateTime? @default(now()) @map("createdDate")
  updatedDate  DateTime? @updatedAt @map("updatedDate")
  refreshToken String?
  email        String    @unique
  firstName    String
  lastName     String?
  avatar       String?
  password     String?

  @@map("users")
}

type Audience {
  ageStart Int
  ageEnd   Int
  level    String
  desc     String?
}

type PerformanceTask {
  title        String? @default("")
  objectives   String  @default("")
  description  String? @default("")
  language     String? @default("English")
  tone         String  @default("Friendly")
  modality     String  @default("Hybrid")
  timeActivity String? @default("30 minutes")
  classSize    Int?    @default(10)

  audience Audience
}

enum QuestionType {
  MULTIPLE_CHOICE
  FILL_IN_THE_BLANK_WITH_OPTIONS
  TRUE_FALSE
  FILL_IN_THE_BLANK_FREE_TEXT
  ESSAY
  MATCHING
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

type DifficultyDistribution {
  difficulty        Difficulty
  numberOfQuestions Int
}

type TypeQuestion {
  type           QuestionType
  totalQuestions Int
  bloomTaxonomy  DifficultyDistribution[]
}

type Worksheet {
  title       String? @default("")
  objectives  String  @default("")
  description String? @default("")
  language    String? @default("English")
  tone        String  @default("Friendly")
  modality    String  @default("Hybrid")

  audience      Audience
  questionTypes TypeQuestion[]
}

type Quiz {
  title       String? @default("")
  objectives  String  @default("")
  description String? @default("")
  language    String? @default("English")
  tone        String  @default("Friendly")
  modality    String  @default("Hybrid")

  audience      Audience
  questionTypes TypeQuestion[]
}

enum ProgressStatus {
  RETRY
  FAIL
  COMPLETED
  PENDING
  STARTED
}

enum MaterialType {
  QUIZ
  WORKSHEET
  PERFORMANCE_TASK
}

type RequestType {
  quiz            Quiz?
  worksheet       Worksheet?
  performanceTask PerformanceTask?
}

model Material {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  userId          String?        @map("userId") @db.ObjectId
  type            MaterialType
  request         RequestType?
  rawResult       String?
  result          Json?
  startDate       DateTime?
  endDate         DateTime?
  runDuration     Int?           @default(0)
  waitDuration    Int?           @default(0)
  createdDate     DateTime?      @default(now()) @map("createdDate")
  updatedDate     DateTime?      @updatedAt @map("updatedDate")
  progressPercent Int?           @default(0)
  progressStatus  ProgressStatus @default(PENDING)
  isGeneratedPDF  Boolean        @default(false)
  ticketId        String?

  @@map("material")
}
